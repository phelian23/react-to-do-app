{"version":3,"sources":["functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/TodoItem.js","functionBased/components/TodosList.js","functionBased/components/TodoContainer.js","index.js"],"names":["Header","className","InputTodo","props","useState","title","errMsg","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoProps","type","placeholder","value","name","onChange","target","TodoItem","editing","setEditing","todo","completed","id","viewMode","editMode","display","useEffect","onDoubleClick","style","checked","handleChangeProps","fontStyle","color","opacity","textDecoration","onClick","deleteTodoProps","setUpdate","onKeyDown","event","key","TodosList","todos","map","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a4dc6b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>todos</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\"\r\n\r\nconst InputTodo = props => {\r\n  const [inputText, setInputText] = useState({\r\n    title: \"\",\r\n    errMsg: \"\"\r\n  })\r\n\r\n  const onChange = e => {\r\n    setInputText({\r\n      ...inputText,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (inputText.title.trim()) {\r\n      props.addTodoProps(inputText.title)\r\n      setInputText({\r\n        title: \"\",\r\n      })\r\n    } else {\r\n        setInputText({\r\n            errMsg: \"Please Add Item\",\r\n          })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <span>{inputText.errMsg}</span><br />\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-text\"\r\n        placeholder=\"Add todo...\"\r\n        value={inputText.title}\r\n        name=\"title\"\r\n        onChange={onChange}\r\n      />\r\n      <button className=\"input-submit\">Submit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default InputTodo","import React, { useState, useEffect } from \"react\"\r\n\r\nconst TodoItem = props => {\r\n  const [editing, setEditing] = useState(false)\r\n\r\n  const handleEditing = () => {\r\n    setEditing(true)\r\n  }\r\n\r\n  const handleUpdatedDone = event => {\r\n    if (event.key === \"Enter\") {\r\n      setEditing(false)\r\n    }\r\n  }\r\n\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#595959\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  }\r\n\r\n  const { completed, id, title } = props.todo\r\n\r\n  let viewMode = {}\r\n  let editMode = {}\r\n\r\n  if (editing) {\r\n    viewMode.display = \"none\"\r\n  } else {\r\n    editMode.display = \"none\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <li className='list-item'>\r\n      <div onDoubleClick={handleEditing} style={viewMode} className='todo-task disflex'>\r\n        <input\r\n          type=\"checkbox\"\r\n          className='checkbox'\r\n          checked={completed}\r\n          onChange={() => props.handleChangeProps(id)}\r\n        />\r\n        <span style={completed ? completedStyle : null} className=\"title-text\">{title}</span>\r\n        <button onClick={() => props.deleteTodoProps(id)} className='delete-btn'>Delete</button>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        style={editMode}\r\n        className='text-input'\r\n        value={title}\r\n        onChange={e => {\r\n          props.setUpdate(e.target.value, id)\r\n        }}\r\n        onKeyDown={handleUpdatedDone}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nconst TodosList = props => {\r\n  return (\r\n    <ul>\r\n      {props.todos.map(todo => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          handleChangeProps={props.handleChangeProps}\r\n          deleteTodoProps={props.deleteTodoProps}\r\n          setUpdate={props.setUpdate}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\nexport default TodosList","import React, { useState, useEffect } from \"react\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport TodosList from \"./TodosList\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\nconst TodoContainer = () => {\r\n  const [todos, setTodos] = useState(getInitialTodos())\r\n\r\n  const handleChange = id => {\r\n    setTodos(prevState =>\r\n      prevState.map(todo => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed,\r\n          }\r\n        }\r\n        return todo\r\n      })\r\n    )\r\n  }\r\n\r\n  const delTodo = id => {\r\n    setTodos([\r\n      ...todos.filter(todo => {\r\n        return todo.id !== id\r\n      }),\r\n    ])\r\n  }\r\n\r\n  const addTodoItem = title => {\r\n    const newTodo = {\r\n      id: uuidv4(),\r\n      title: title,\r\n      completed: false,\r\n    }\r\n    setTodos([...todos, newTodo])\r\n  }\r\n\r\n  const setUpdate = (updatedTitle, id) => {\r\n    setTodos(\r\n      todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.title = updatedTitle\r\n        }\r\n        return todo\r\n      })\r\n    )\r\n  }\r\n\r\n  function getInitialTodos() {\r\n    // getting stored items\r\n    const temp = localStorage.getItem(\"todos\")\r\n    const savedTodos = JSON.parse(temp)\r\n    return savedTodos || []\r\n  }\r\n\r\n  useEffect(() => {\r\n    // storing todos items\r\n    const temp = JSON.stringify(todos)\r\n    localStorage.setItem(\"todos\", temp)\r\n  }, [todos])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"inner\">\r\n        <Header />\r\n        <InputTodo addTodoProps={addTodoItem} />\r\n        <TodosList\r\n          todos={todos}\r\n          handleChangeProps={handleChange}\r\n          deleteTodoProps={delTodo}\r\n          setUpdate={setUpdate}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoContainer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TodoContainer from \"./functionBased/components/TodoContainer\"\r\nimport \"./functionBased/App.css\"\r\n\r\nReactDOM.render(<React.StrictMode><TodoContainer /></React.StrictMode>, document.getElementById('root'));"],"sourceRoot":""}